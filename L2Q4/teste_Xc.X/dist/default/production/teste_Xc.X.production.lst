

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Oct 12 18:48:12 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56 ;; Function _transmiteBytes is unused but had its address taken
    57   000000                     
    58                           	psect	idataCOMRAM
    59   007DE0                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _Uart
    63   007DE0  EC                 	db	low _inicializarPic
    64   007DE1  7D                 	db	high _inicializarPic
    65   007DE2  B8                 	db	low _transmiteByte
    66   007DE3  7E                 	db	high _transmiteByte
    67   007DE4  00                 	db	0
    68   007DE5  00                 	db	0
    69   007DE6  56                 	db	low _readByte
    70   007DE7  7F                 	db	high _readByte
    71   007DE8  FA                 	db	low _delayWait
    72   007DE9  7D                 	db	high _delayWait
    73   007DEA  00                 	db	0
    74   007DEB  00                 	db	0
    75   000000                     _PORTCbits	set	3970
    76   000000                     _TRISCbits	set	3988
    77   000000                     _OSCTUNEbits	set	3995
    78   000000                     _OSCCONbits	set	4051
    79                           
    80                           ; #config settings
    81                           
    82                           	psect	cinit
    83   007E0C                     __pcinit:
    84                           	callstack 0
    85   007E0C                     start_initialization:
    86                           	callstack 0
    87   007E0C                     __initialization:
    88                           	callstack 0
    89                           
    90                           ; Initialize objects allocated to COMRAM (12 bytes)
    91                           ; load TBLPTR registers with __pidataCOMRAM
    92   007E0C  0EE0               	movlw	low __pidataCOMRAM
    93   007E0E  6EF6               	movwf	tblptrl,c
    94   007E10  0E7D               	movlw	high __pidataCOMRAM
    95   007E12  6EF7               	movwf	tblptrh,c
    96   007E14  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    97   007E16  6EF8               	movwf	tblptru,c
    98   007E18  EE00  F001         	lfsr	0,__pdataCOMRAM
    99   007E1C  EE10 F00C          	lfsr	1,12
   100   007E20                     copy_data0:
   101   007E20  0009               	tblrd		*+
   102   007E22  CFF5 FFEE          	movff	tablat,postinc0
   103   007E26  50E5               	movf	postdec1,w,c
   104   007E28  50E1               	movf	fsr1l,w,c
   105   007E2A  E1FA               	bnz	copy_data0
   106   007E2C                     end_of_initialization:
   107                           	callstack 0
   108   007E2C                     __end_of__initialization:
   109                           	callstack 0
   110   007E2C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   111   007E2E  6EF8               	movwf	tblptru,c
   112   007E30  0100               	movlb	0
   113   007E32  EF1B  F03F         	goto	_main	;jump to C main() function
   114                           
   115                           	psect	dataCOMRAM
   116   000001                     __pdataCOMRAM:
   117                           	callstack 0
   118   000001                     _Uart:
   119                           	callstack 0
   120   000001                     	ds	12
   121                           
   122                           	psect	cstackCOMRAM
   123   00000D                     __pcstackCOMRAM:
   124                           	callstack 0
   125   00000D                     ??_delayWait:
   126   00000D                     ??_transmiteByte:
   127   00000D                     ??_readByte:
   128                           
   129                           ; 1 bytes @ 0x0
   130   00000D                     	ds	2
   131   00000F                     transmiteByte@byte:
   132                           	callstack 0
   133   00000F                     readByte@valor:
   134                           	callstack 0
   135                           
   136                           ; 2 bytes @ 0x2
   137   00000F                     	ds	1
   138   000010                     transmiteByte@mascara:
   139                           	callstack 0
   140                           
   141                           ; 1 bytes @ 0x3
   142   000010                     	ds	1
   143   000011                     transmiteByte@valor:
   144                           	callstack 0
   145   000011                     readByte@dado:
   146                           	callstack 0
   147                           
   148                           ; 1 bytes @ 0x4
   149   000011                     	ds	1
   150   000012                     transmiteByte@i:
   151                           	callstack 0
   152   000012                     readByte@i:
   153                           	callstack 0
   154                           
   155                           ; 2 bytes @ 0x5
   156   000012                     	ds	2
   157   000014                     ??_main:
   158                           
   159                           ; 1 bytes @ 0x7
   160   000014                     	ds	1
   161                           
   162 ;;
   163 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   164 ;;
   165 ;; *************** function _main *****************
   166 ;; Defined at:
   167 ;;		line 3 in file "main.c"
   168 ;; Parameters:    Size  Location     Type
   169 ;;		None
   170 ;; Auto vars:     Size  Location     Type
   171 ;;		None
   172 ;; Return value:  Size  Location     Type
   173 ;;                  1    wreg      void 
   174 ;; Registers used:
   175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
   176 ;; Tracked objects:
   177 ;;		On entry : 0/0
   178 ;;		On exit  : 0/0
   179 ;;		Unchanged: 0/0
   180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   181 ;;      Params:         0       0       0       0       0       0       0
   182 ;;      Locals:         0       0       0       0       0       0       0
   183 ;;      Temps:          1       0       0       0       0       0       0
   184 ;;      Totals:         1       0       0       0       0       0       0
   185 ;;Total ram usage:        1 bytes
   186 ;; Hardware stack levels required when called: 1
   187 ;; This function calls:
   188 ;;		_delayWait
   189 ;;		_inicializarPic
   190 ;;		_readByte
   191 ;;		_transmiteByte
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198   007E36                     __ptext0:
   199                           	callstack 0
   200   007E36                     _main:
   201                           	callstack 30
   202   007E36                     
   203                           ;main.c: 5:     Uart.init();
   204   007E36  D802               	call	u338
   205   007E38  EF28  F03F         	goto	u339
   206   007E3C                     u338:
   207   007E3C  0005               	push	
   208   007E3E  6EFA               	movwf	pclath,c
   209   007E40  5001               	movf	_Uart^0,w,c
   210   007E42  6EFD               	movwf	tosl,c
   211   007E44  5002               	movf	(_Uart+1)^0,w,c
   212   007E46  6EFE               	movwf	tosh,c
   213   007E48  50F8               	movf	tblptru,w,c
   214   007E4A  6EFF               	movwf	tosu,c
   215   007E4C  50FA               	movf	pclath,w,c
   216   007E4E  0012               	return		;indir
   217   007E50                     u339:
   218   007E50                     l965:
   219                           
   220                           ;main.c: 7:     {;main.c: 8:       Uart.write(Uart.read());
   221   007E50  EE20  F007         	lfsr	2,_Uart+6
   222   007E54  D802               	call	u348
   223   007E56  EF37  F03F         	goto	u349
   224   007E5A                     u348:
   225   007E5A  0005               	push	
   226   007E5C  6EFA               	movwf	pclath,c
   227   007E5E  50DE               	movf	postinc2,w,c
   228   007E60  6EFD               	movwf	tosl,c
   229   007E62  50DE               	movf	postinc2,w,c
   230   007E64  6EFE               	movwf	tosh,c
   231   007E66  50F8               	movf	tblptru,w,c
   232   007E68  6EFF               	movwf	tosu,c
   233   007E6A  50FA               	movf	pclath,w,c
   234   007E6C  0012               	return		;indir
   235   007E6E                     u349:
   236   007E6E  6E14               	movwf	??_main^0,c
   237   007E70  C014  FFE8         	movff	??_main,wreg
   238   007E74  EE20  F003         	lfsr	2,_Uart+2
   239   007E78  D802               	call	u358
   240   007E7A  EF49  F03F         	goto	u359
   241   007E7E                     u358:
   242   007E7E  0005               	push	
   243   007E80  6EFA               	movwf	pclath,c
   244   007E82  50DE               	movf	postinc2,w,c
   245   007E84  6EFD               	movwf	tosl,c
   246   007E86  50DE               	movf	postinc2,w,c
   247   007E88  6EFE               	movwf	tosh,c
   248   007E8A  50F8               	movf	tblptru,w,c
   249   007E8C  6EFF               	movwf	tosu,c
   250   007E8E  50FA               	movf	pclath,w,c
   251   007E90  0012               	return		;indir
   252   007E92                     u359:
   253   007E92                     
   254                           ;main.c: 9:       Uart.wait();
   255   007E92  EE20  F009         	lfsr	2,_Uart+8
   256   007E96  D802               	call	u368
   257   007E98  EF58  F03F         	goto	u369
   258   007E9C                     u368:
   259   007E9C  0005               	push	
   260   007E9E  6EFA               	movwf	pclath,c
   261   007EA0  50DE               	movf	postinc2,w,c
   262   007EA2  6EFD               	movwf	tosl,c
   263   007EA4  50DE               	movf	postinc2,w,c
   264   007EA6  6EFE               	movwf	tosh,c
   265   007EA8  50F8               	movf	tblptru,w,c
   266   007EAA  6EFF               	movwf	tosu,c
   267   007EAC  50FA               	movf	pclath,w,c
   268   007EAE  0012               	return		;indir
   269   007EB0                     u369:
   270   007EB0  EF28  F03F         	goto	l965
   271   007EB4  EF00  F000         	goto	start
   272   007EB8                     __end_of_main:
   273                           	callstack 0
   274                           
   275 ;; *************** function _transmiteByte *****************
   276 ;; Defined at:
   277 ;;		line 20 in file "defines.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;  byte            1    wreg     unsigned char 
   280 ;; Auto vars:     Size  Location     Type
   281 ;;  byte            1    2[COMRAM] unsigned char 
   282 ;;  i               2    5[COMRAM] unsigned int 
   283 ;;  valor           1    4[COMRAM] unsigned char 
   284 ;;  mascara         1    3[COMRAM] unsigned char 
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   294 ;;      Params:         0       0       0       0       0       0       0
   295 ;;      Locals:         5       0       0       0       0       0       0
   296 ;;      Temps:          2       0       0       0       0       0       0
   297 ;;      Totals:         7       0       0       0       0       0       0
   298 ;;Total ram usage:        7 bytes
   299 ;; Hardware stack levels used: 1
   300 ;; This function calls:
   301 ;;		Nothing
   302 ;; This function is called by:
   303 ;;		_main
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text1
   308   007EB8                     __ptext1:
   309                           	callstack 0
   310   007EB8                     _transmiteByte:
   311                           	callstack 30
   312                           
   313                           ;incstack = 0
   314                           ;transmiteByte@byte stored from wreg
   315   007EB8  6E0F               	movwf	transmiteByte@byte^0,c
   316   007EBA                     
   317                           ;defines.c: 23:   unsigned char mascara = 0b00000001;
   318   007EBA  0E01               	movlw	1
   319   007EBC  6E10               	movwf	transmiteByte@mascara^0,c
   320                           
   321                           ;defines.c: 24:   unsigned char valor = 0;
   322   007EBE  0E00               	movlw	0
   323   007EC0  6E11               	movwf	transmiteByte@valor^0,c
   324   007EC2                     
   325                           ;defines.c: 26:   PORTCbits.RC0 = 1;
   326   007EC2  8082               	bsf	130,0,c	;volatile
   327   007EC4                     
   328                           ;defines.c: 27:   _delay((unsigned long)((833)*(8000000/4000000.0)));
   329   007EC4  0EEE               	movlw	238
   330   007EC6                     u377:
   331   007EC6  D000               	nop2	
   332   007EC8  D000               	nop2	
   333   007ECA  2EE8               	decfsz	wreg,f,c
   334   007ECC  D7FC               	bra	u377
   335   007ECE                     
   336                           ;defines.c: 28:   PORTCbits.RC0 = 0;
   337   007ECE  9082               	bcf	130,0,c	;volatile
   338   007ED0                     
   339                           ;defines.c: 29:   _delay((unsigned long)((833)*(8000000/4000000.0)));
   340   007ED0  0EEE               	movlw	238
   341   007ED2                     u387:
   342   007ED2  D000               	nop2	
   343   007ED4  D000               	nop2	
   344   007ED6  2EE8               	decfsz	wreg,f,c
   345   007ED8  D7FC               	bra	u387
   346                           
   347                           ;defines.c: 30:   for(i = 0; i < 8; i++)
   348   007EDA  0E00               	movlw	0
   349   007EDC  6E13               	movwf	(transmiteByte@i+1)^0,c
   350   007EDE  0E00               	movlw	0
   351   007EE0  6E12               	movwf	transmiteByte@i^0,c
   352   007EE2                     l915:
   353                           
   354                           ;defines.c: 31:   {;defines.c: 32:     if (byte & mascara<<i)
   355   007EE2  C012  F00D         	movff	transmiteByte@i,??_transmiteByte
   356   007EE6  C010  F00E         	movff	transmiteByte@mascara,??_transmiteByte+1
   357   007EEA  2A0D               	incf	??_transmiteByte^0,f,c
   358   007EEC  EF7A  F03F         	goto	u244
   359   007EF0                     u245:
   360   007EF0  90D8               	bcf	status,0,c
   361   007EF2  360E               	rlcf	(??_transmiteByte+1)^0,f,c
   362   007EF4                     u244:
   363   007EF4  2E0D               	decfsz	??_transmiteByte^0,f,c
   364   007EF6  EF78  F03F         	goto	u245
   365   007EFA  500E               	movf	(??_transmiteByte+1)^0,w,c
   366   007EFC  140F               	andwf	transmiteByte@byte^0,w,c
   367   007EFE  0900               	iorlw	0
   368   007F00  B4D8               	btfsc	status,2,c
   369   007F02  EF85  F03F         	goto	u251
   370   007F06  EF87  F03F         	goto	u250
   371   007F0A                     u251:
   372   007F0A  EF8B  F03F         	goto	l919
   373   007F0E                     u250:
   374   007F0E                     
   375                           ;defines.c: 33:     {;defines.c: 34:         valor = 1;
   376   007F0E  0E01               	movlw	1
   377   007F10  6E11               	movwf	transmiteByte@valor^0,c
   378                           
   379                           ;defines.c: 35:     }
   380   007F12  EF8D  F03F         	goto	l921
   381   007F16                     l919:
   382                           
   383                           ;defines.c: 37:     {;defines.c: 38:         valor = 0;
   384   007F16  0E00               	movlw	0
   385   007F18  6E11               	movwf	transmiteByte@valor^0,c
   386   007F1A                     l921:
   387                           
   388                           ;defines.c: 40:     PORTCbits.RC0 = valor;
   389   007F1A  B011               	btfsc	transmiteByte@valor^0,0,c
   390   007F1C  D002               	bra	u265
   391   007F1E  9082               	bcf	130,0,c	;volatile
   392   007F20  D001               	bra	u266
   393   007F22                     u265:
   394   007F22  8082               	bsf	130,0,c	;volatile
   395   007F24                     u266:
   396   007F24                     
   397                           ;defines.c: 41:     _delay((unsigned long)((833)*(8000000/4000000.0)));
   398   007F24  0EEE               	movlw	238
   399   007F26                     u397:
   400   007F26  D000               	nop2	
   401   007F28  D000               	nop2	
   402   007F2A  2EE8               	decfsz	wreg,f,c
   403   007F2C  D7FC               	bra	u397
   404   007F2E                     
   405                           ;defines.c: 42:   }
   406   007F2E  4A12               	infsnz	transmiteByte@i^0,f,c
   407   007F30  2A13               	incf	(transmiteByte@i+1)^0,f,c
   408   007F32  5013               	movf	(transmiteByte@i+1)^0,w,c
   409   007F34  E109               	bnz	u270
   410   007F36  0E08               	movlw	8
   411   007F38  5C12               	subwf	transmiteByte@i^0,w,c
   412   007F3A  A0D8               	btfss	status,0,c
   413   007F3C  EFA2  F03F         	goto	u271
   414   007F40  EFA4  F03F         	goto	u270
   415   007F44                     u271:
   416   007F44  EF71  F03F         	goto	l915
   417   007F48                     u270:
   418   007F48                     
   419                           ;defines.c: 43:   PORTCbits.RC0 = 1;
   420   007F48  8082               	bsf	130,0,c	;volatile
   421   007F4A                     
   422                           ;defines.c: 44:   _delay((unsigned long)((833)*(8000000/4000000.0)));
   423   007F4A  0EEE               	movlw	238
   424   007F4C                     u407:
   425   007F4C  D000               	nop2	
   426   007F4E  D000               	nop2	
   427   007F50  2EE8               	decfsz	wreg,f,c
   428   007F52  D7FC               	bra	u407
   429   007F54  0012               	return		;funcret
   430   007F56                     __end_of_transmiteByte:
   431                           	callstack 0
   432                           
   433 ;; *************** function _readByte *****************
   434 ;; Defined at:
   435 ;;		line 81 in file "defines.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;  i               2    5[COMRAM] unsigned int 
   440 ;;  valor           2    2[COMRAM] int 
   441 ;;  dado            1    4[COMRAM] unsigned char 
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      unsigned char 
   444 ;; Registers used:
   445 ;;		wreg, status,2, status,0
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   451 ;;      Params:         0       0       0       0       0       0       0
   452 ;;      Locals:         5       0       0       0       0       0       0
   453 ;;      Temps:          2       0       0       0       0       0       0
   454 ;;      Totals:         7       0       0       0       0       0       0
   455 ;;Total ram usage:        7 bytes
   456 ;; Hardware stack levels used: 1
   457 ;; This function calls:
   458 ;;		Nothing
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text2
   465   007F56                     __ptext2:
   466                           	callstack 0
   467   007F56                     _readByte:
   468                           	callstack 30
   469   007F56                     
   470                           ;defines.c: 84:     char dado = 0b00000000;
   471   007F56  0E00               	movlw	0
   472   007F58  6E11               	movwf	readByte@dado^0,c
   473                           
   474                           ;defines.c: 85:     int valor = 0;
   475   007F5A  0E00               	movlw	0
   476   007F5C  6E10               	movwf	(readByte@valor+1)^0,c
   477   007F5E  0E00               	movlw	0
   478   007F60  6E0F               	movwf	readByte@valor^0,c
   479   007F62                     l48:
   480   007F62  B282               	btfsc	130,1,c	;volatile
   481   007F64  EFB6  F03F         	goto	u281
   482   007F68  EFB8  F03F         	goto	u280
   483   007F6C                     u281:
   484   007F6C  EFB1  F03F         	goto	l48
   485   007F70                     u280:
   486   007F70                     
   487                           ;defines.c: 88:     _delay((unsigned long)((416)*(8000000/4000000.0)));
   488   007F70  0EA6               	movlw	166
   489   007F72                     u417:
   490   007F72  D000               	nop2	
   491   007F74  2EE8               	decfsz	wreg,f,c
   492   007F76  D7FD               	bra	u417
   493   007F78  D000               	nop2	
   494   007F7A                     
   495                           ;defines.c: 89:     if(PORTCbits.RC1) {
   496   007F7A  A282               	btfss	130,1,c	;volatile
   497   007F7C  EFC2  F03F         	goto	u291
   498   007F80  EFC4  F03F         	goto	u290
   499   007F84                     u291:
   500   007F84  EFC7  F03F         	goto	l941
   501   007F88                     u290:
   502   007F88                     
   503                           ;defines.c: 90:       return 0xff;
   504   007F88  0EFF               	movlw	255
   505   007F8A  EFFF  F03F         	goto	l52
   506   007F8E                     l941:
   507                           
   508                           ;defines.c: 93:     _delay((unsigned long)((833)*(8000000/4000000.0)));
   509   007F8E  0EEE               	movlw	238
   510   007F90                     u427:
   511   007F90  D000               	nop2	
   512   007F92  D000               	nop2	
   513   007F94  2EE8               	decfsz	wreg,f,c
   514   007F96  D7FC               	bra	u427
   515   007F98                     
   516                           ;defines.c: 94:     for(i = 0; i < 8; i++)
   517   007F98  0E00               	movlw	0
   518   007F9A  6E13               	movwf	(readByte@i+1)^0,c
   519   007F9C  0E00               	movlw	0
   520   007F9E  6E12               	movwf	readByte@i^0,c
   521   007FA0                     l949:
   522                           
   523                           ;defines.c: 95:     {;defines.c: 96:       valor = (int) PORTCbits.RC1;
   524   007FA0  B282               	btfsc	130,1,c	;volatile
   525   007FA2  EFD5  F03F         	goto	u301
   526   007FA6  EFD9  F03F         	goto	u300
   527   007FAA                     u301:
   528   007FAA  6A0D               	clrf	??_readByte^0,c
   529   007FAC  2A0D               	incf	??_readByte^0,f,c
   530   007FAE  EFDA  F03F         	goto	u308
   531   007FB2                     u300:
   532   007FB2  6A0D               	clrf	??_readByte^0,c
   533   007FB4                     u308:
   534   007FB4  500D               	movf	??_readByte^0,w,c
   535   007FB6  6E0F               	movwf	readByte@valor^0,c
   536   007FB8  6A10               	clrf	(readByte@valor+1)^0,c
   537   007FBA                     
   538                           ;defines.c: 97:       dado = dado | valor<<i;
   539   007FBA  C012  F00D         	movff	readByte@i,??_readByte
   540   007FBE  C00F  F00E         	movff	readByte@valor,??_readByte+1
   541   007FC2  2A0D               	incf	??_readByte^0,f,c
   542   007FC4  EFE6  F03F         	goto	u314
   543   007FC8                     u315:
   544   007FC8  90D8               	bcf	status,0,c
   545   007FCA  360E               	rlcf	(??_readByte+1)^0,f,c
   546   007FCC                     u314:
   547   007FCC  2E0D               	decfsz	??_readByte^0,f,c
   548   007FCE  EFE4  F03F         	goto	u315
   549   007FD2  500E               	movf	(??_readByte+1)^0,w,c
   550   007FD4  1011               	iorwf	readByte@dado^0,w,c
   551   007FD6  6E11               	movwf	readByte@dado^0,c
   552   007FD8                     
   553                           ;defines.c: 98:        _delay((unsigned long)((833)*(8000000/4000000.0)));
   554   007FD8  0EEE               	movlw	238
   555   007FDA                     u437:
   556   007FDA  D000               	nop2	
   557   007FDC  D000               	nop2	
   558   007FDE  2EE8               	decfsz	wreg,f,c
   559   007FE0  D7FC               	bra	u437
   560   007FE2                     
   561                           ;defines.c: 99:     }
   562   007FE2  4A12               	infsnz	readByte@i^0,f,c
   563   007FE4  2A13               	incf	(readByte@i+1)^0,f,c
   564   007FE6  5013               	movf	(readByte@i+1)^0,w,c
   565   007FE8  E109               	bnz	u320
   566   007FEA  0E08               	movlw	8
   567   007FEC  5C12               	subwf	readByte@i^0,w,c
   568   007FEE  A0D8               	btfss	status,0,c
   569   007FF0  EFFC  F03F         	goto	u321
   570   007FF4  EFFE  F03F         	goto	u320
   571   007FF8                     u321:
   572   007FF8  EFD0  F03F         	goto	l949
   573   007FFC                     u320:
   574   007FFC                     
   575                           ;defines.c: 100:     return dado;
   576   007FFC  5011               	movf	readByte@dado^0,w,c
   577   007FFE                     l52:
   578   007FFE  0012               	return		;funcret
   579   008000                     __end_of_readByte:
   580                           	callstack 0
   581                           
   582 ;; *************** function _inicializarPic *****************
   583 ;; Defined at:
   584 ;;		line 5 in file "defines.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, status,2
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   598 ;;      Params:         0       0       0       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0       0       0
   601 ;;      Totals:         0       0       0       0       0       0       0
   602 ;;Total ram usage:        0 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text3
   612   007DEC                     __ptext3:
   613                           	callstack 0
   614   007DEC                     _inicializarPic:
   615                           	callstack 30
   616   007DEC                     
   617                           ;defines.c: 6:   OSCCONbits.IRCF = 0b111;
   618   007DEC  0E70               	movlw	112
   619   007DEE  12D3               	iorwf	211,f,c	;volatile
   620   007DF0                     
   621                           ;defines.c: 7:   OSCTUNEbits.PLLEN = 0b1;
   622   007DF0  8C9B               	bsf	155,6,c	;volatile
   623   007DF2                     
   624                           ;defines.c: 8:   TRISCbits.RC0 = 0;
   625   007DF2  9094               	bcf	148,0,c	;volatile
   626   007DF4                     
   627                           ;defines.c: 9:   TRISCbits.RC1 = 1;
   628   007DF4  8294               	bsf	148,1,c	;volatile
   629   007DF6                     
   630                           ;defines.c: 10:   PORTCbits.RC0 = 1;
   631   007DF6  8082               	bsf	130,0,c	;volatile
   632   007DF8  0012               	return		;funcret
   633   007DFA                     __end_of_inicializarPic:
   634                           	callstack 0
   635                           
   636 ;; *************** function _delayWait *****************
   637 ;; Defined at:
   638 ;;		line 13 in file "defines.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   652 ;;      Params:         0       0       0       0       0       0       0
   653 ;;      Locals:         0       0       0       0       0       0       0
   654 ;;      Temps:          1       0       0       0       0       0       0
   655 ;;      Totals:         1       0       0       0       0       0       0
   656 ;;Total ram usage:        1 bytes
   657 ;; Hardware stack levels used: 1
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_main
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           	psect	text4
   666   007DFA                     __ptext4:
   667                           	callstack 0
   668   007DFA                     _delayWait:
   669                           	callstack 30
   670   007DFA                     
   671                           ;defines.c: 15:     _delay((unsigned long)((30)*(8000000/4000.0)));
   672   007DFA  0E4E               	movlw	78
   673   007DFC  6E0D               	movwf	??_delayWait^0,c
   674   007DFE  0EEB               	movlw	235
   675   007E00                     u447:
   676   007E00  2EE8               	decfsz	wreg,f,c
   677   007E02  D7FE               	bra	u447
   678   007E04  2E0D               	decfsz	??_delayWait^0,f,c
   679   007E06  D7FC               	bra	u447
   680   007E08  F000               	nop	
   681   007E0A  0012               	return		;funcret
   682   007E0C                     __end_of_delayWait:
   683                           	callstack 0
   684   000000                     
   685                           	psect	text5
   686   000000                     __ptext5:
   687                           	callstack 0
   688   000000                     
   689                           	psect	rparam
   690   000000                     
   691                           	psect	idloc
   692                           
   693                           ;Config register IDLOC0 @ 0x200000
   694                           ;	unspecified, using default values
   695   200000                     	org	2097152
   696   200000  FF                 	db	255
   697                           
   698                           ;Config register IDLOC1 @ 0x200001
   699                           ;	unspecified, using default values
   700   200001                     	org	2097153
   701   200001  FF                 	db	255
   702                           
   703                           ;Config register IDLOC2 @ 0x200002
   704                           ;	unspecified, using default values
   705   200002                     	org	2097154
   706   200002  FF                 	db	255
   707                           
   708                           ;Config register IDLOC3 @ 0x200003
   709                           ;	unspecified, using default values
   710   200003                     	org	2097155
   711   200003  FF                 	db	255
   712                           
   713                           ;Config register IDLOC4 @ 0x200004
   714                           ;	unspecified, using default values
   715   200004                     	org	2097156
   716   200004  FF                 	db	255
   717                           
   718                           ;Config register IDLOC5 @ 0x200005
   719                           ;	unspecified, using default values
   720   200005                     	org	2097157
   721   200005  FF                 	db	255
   722                           
   723                           ;Config register IDLOC6 @ 0x200006
   724                           ;	unspecified, using default values
   725   200006                     	org	2097158
   726   200006  FF                 	db	255
   727                           
   728                           ;Config register IDLOC7 @ 0x200007
   729                           ;	unspecified, using default values
   730   200007                     	org	2097159
   731   200007  FF                 	db	255
   732                           
   733                           	psect	config
   734                           
   735                           ; Padding undefined space
   736   300000                     	org	3145728
   737   300000  FF                 	db	255
   738                           
   739                           ;Config register CONFIG1H @ 0x300001
   740                           ;	unspecified, using default values
   741                           ;	Oscillator Selection bits
   742                           ;	OSC = 0x7, unprogrammed default
   743                           ;	Fail-Safe Clock Monitor Enable bit
   744                           ;	FCMEN = 0x0, unprogrammed default
   745                           ;	Internal/External Oscillator Switchover bit
   746                           ;	IESO = 0x0, unprogrammed default
   747   300001                     	org	3145729
   748   300001  07                 	db	7
   749                           
   750                           ;Config register CONFIG2L @ 0x300002
   751                           ;	unspecified, using default values
   752                           ;	Power-up Timer Enable bit
   753                           ;	PWRT = 0x1, unprogrammed default
   754                           ;	Brown-out Reset Enable bits
   755                           ;	BOREN = 0x3, unprogrammed default
   756                           ;	Brown Out Reset Voltage bits
   757                           ;	BORV = 0x3, unprogrammed default
   758   300002                     	org	3145730
   759   300002  1F                 	db	31
   760                           
   761                           ;Config register CONFIG2H @ 0x300003
   762                           ;	Watchdog Timer Enable bit
   763                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   764                           ;	Watchdog Timer Postscale Select bits
   765                           ;	WDTPS = 0xF, unprogrammed default
   766   300003                     	org	3145731
   767   300003  1E                 	db	30
   768                           
   769                           ; Padding undefined space
   770   300004                     	org	3145732
   771   300004  FF                 	db	255
   772                           
   773                           ;Config register CONFIG3H @ 0x300005
   774                           ;	unspecified, using default values
   775                           ;	CCP2 MUX bit
   776                           ;	CCP2MX = 0x1, unprogrammed default
   777                           ;	PORTB A/D Enable bit
   778                           ;	PBADEN = 0x1, unprogrammed default
   779                           ;	Low-Power Timer1 Oscillator Enable bit
   780                           ;	LPT1OSC = 0x0, unprogrammed default
   781                           ;	MCLR Pin Enable bit
   782                           ;	MCLRE = 0x1, unprogrammed default
   783   300005                     	org	3145733
   784   300005  83                 	db	131
   785                           
   786                           ;Config register CONFIG4L @ 0x300006
   787                           ;	unspecified, using default values
   788                           ;	Stack Full/Underflow Reset Enable bit
   789                           ;	STVREN = 0x1, unprogrammed default
   790                           ;	Single-Supply ICSP Enable bit
   791                           ;	LVP = 0x1, unprogrammed default
   792                           ;	Extended Instruction Set Enable bit
   793                           ;	XINST = 0x0, unprogrammed default
   794                           ;	Background Debugger Enable bit
   795                           ;	DEBUG = 0x1, unprogrammed default
   796   300006                     	org	3145734
   797   300006  85                 	db	133
   798                           
   799                           ; Padding undefined space
   800   300007                     	org	3145735
   801   300007  FF                 	db	255
   802                           
   803                           ;Config register CONFIG5L @ 0x300008
   804                           ;	unspecified, using default values
   805                           ;	Code Protection bit
   806                           ;	CP0 = 0x1, unprogrammed default
   807                           ;	Code Protection bit
   808                           ;	CP1 = 0x1, unprogrammed default
   809                           ;	Code Protection bit
   810                           ;	CP2 = 0x1, unprogrammed default
   811                           ;	Code Protection bit
   812                           ;	CP3 = 0x1, unprogrammed default
   813   300008                     	org	3145736
   814   300008  0F                 	db	15
   815                           
   816                           ;Config register CONFIG5H @ 0x300009
   817                           ;	unspecified, using default values
   818                           ;	Boot Block Code Protection bit
   819                           ;	CPB = 0x1, unprogrammed default
   820                           ;	Data EEPROM Code Protection bit
   821                           ;	CPD = 0x1, unprogrammed default
   822   300009                     	org	3145737
   823   300009  C0                 	db	192
   824                           
   825                           ;Config register CONFIG6L @ 0x30000A
   826                           ;	unspecified, using default values
   827                           ;	Write Protection bit
   828                           ;	WRT0 = 0x1, unprogrammed default
   829                           ;	Write Protection bit
   830                           ;	WRT1 = 0x1, unprogrammed default
   831                           ;	Write Protection bit
   832                           ;	WRT2 = 0x1, unprogrammed default
   833                           ;	Write Protection bit
   834                           ;	WRT3 = 0x1, unprogrammed default
   835   30000A                     	org	3145738
   836   30000A  0F                 	db	15
   837                           
   838                           ;Config register CONFIG6H @ 0x30000B
   839                           ;	unspecified, using default values
   840                           ;	Configuration Register Write Protection bit
   841                           ;	WRTC = 0x1, unprogrammed default
   842                           ;	Boot Block Write Protection bit
   843                           ;	WRTB = 0x1, unprogrammed default
   844                           ;	Data EEPROM Write Protection bit
   845                           ;	WRTD = 0x1, unprogrammed default
   846   30000B                     	org	3145739
   847   30000B  E0                 	db	224
   848                           
   849                           ;Config register CONFIG7L @ 0x30000C
   850                           ;	unspecified, using default values
   851                           ;	Table Read Protection bit
   852                           ;	EBTR0 = 0x1, unprogrammed default
   853                           ;	Table Read Protection bit
   854                           ;	EBTR1 = 0x1, unprogrammed default
   855                           ;	Table Read Protection bit
   856                           ;	EBTR2 = 0x1, unprogrammed default
   857                           ;	Table Read Protection bit
   858                           ;	EBTR3 = 0x1, unprogrammed default
   859   30000C                     	org	3145740
   860   30000C  0F                 	db	15
   861                           
   862                           ;Config register CONFIG7H @ 0x30000D
   863                           ;	unspecified, using default values
   864                           ;	Boot Block Table Read Protection bit
   865                           ;	EBTRB = 0x1, unprogrammed default
   866   30000D                     	org	3145741
   867   30000D  40                 	db	64
   868                           tosu	equ	0xFFF
   869                           tosh	equ	0xFFE
   870                           tosl	equ	0xFFD
   871                           stkptr	equ	0xFFC
   872                           pclatu	equ	0xFFB
   873                           pclath	equ	0xFFA
   874                           pcl	equ	0xFF9
   875                           tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           prodh	equ	0xFF4
   880                           prodl	equ	0xFF3
   881                           indf0	equ	0xFEF
   882                           postinc0	equ	0xFEE
   883                           postdec0	equ	0xFED
   884                           preinc0	equ	0xFEC
   885                           plusw0	equ	0xFEB
   886                           fsr0h	equ	0xFEA
   887                           fsr0l	equ	0xFE9
   888                           wreg	equ	0xFE8
   889                           indf1	equ	0xFE7
   890                           postinc1	equ	0xFE6
   891                           postdec1	equ	0xFE5
   892                           preinc1	equ	0xFE4
   893                           plusw1	equ	0xFE3
   894                           fsr1h	equ	0xFE2
   895                           fsr1l	equ	0xFE1
   896                           bsr	equ	0xFE0
   897                           indf2	equ	0xFDF
   898                           postinc2	equ	0xFDE
   899                           postdec2	equ	0xFDD
   900                           preinc2	equ	0xFDC
   901                           plusw2	equ	0xFDB
   902                           fsr2h	equ	0xFDA
   903                           fsr2l	equ	0xFD9
   904                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      8      20
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    S30$2$0	PTR const unsigned char  size(2) Largest target is 0

    sp__readBytes	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    S30$read_bytes	PTR FTN()PTR unsigned char  size(2) Largest target is 0

    Uart.read_bytes	PTR FTN()PTR unsigned char  size(2) Largest target is 0

    S30$wait	PTR FTN()void  size(2) Largest target is 1
		 -> delayWait(), 

    Uart.wait	PTR FTN()void  size(2) Largest target is 1
		 -> delayWait(), 

    S30$read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> readByte(), 

    Uart.read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> readByte(), 

    S30$write_bytes	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> transmiteBytes(), 

    Uart.write_bytes	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> transmiteBytes(), 

    S30$write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> transmiteByte(), 

    Uart.write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> transmiteByte(), 

    S30$init	PTR FTN()void  size(2) Largest target is 1
		 -> inicializarPic(), 

    Uart.init	PTR FTN()void  size(2) Largest target is 1
		 -> inicializarPic(), 


Critical Paths under _main in COMRAM

    _main->_readByte
    _main->_transmiteByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     278
                                              7 COMRAM     1     1      0
                          _delayWait *
                     _inicializarPic *
                           _readByte *
                      _transmiteByte *
 ---------------------------------------------------------------------------------
 (1) _transmiteByte                                        7     7      0     139
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _readByte                                             7     7      0     139
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _inicializarPic                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayWait                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delayWait *
   _inicializarPic *
   _readByte *
   _transmiteByte *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      8      14       1       15.7%
BITBIGSFRlh         37      0       0      17        0.0%
BITBIGSFRh          2C      0       0      16        0.0%
BITBIGSFRlllh       11      0       0      19        0.0%
BITBIGSFRllh         6      0       0      18        0.0%
BITBIGSFRllll        2      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      21        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Oct 12 18:48:12 2022

            fp__readByte 0000                       l32 7F48                       l25 7DF8  
                     l35 7F54                       l28 7E0A                       l52 7FFE  
                     l48 7F62                      l901 7EBA                      l903 7EC2  
                    l921 7F1A                      l905 7EC4                      l931 7F56  
                    l923 7F24                      l915 7EE2                      l907 7ECE  
                    l941 7F8E                      l933 7F70                      l925 7F2E  
                    l917 7F0E                      l909 7ED0                      l951 7FBA  
                    l943 7F98                      l935 7F7A                      l927 7F32  
                    l919 7F16                      l953 7FD8                      l937 7F88  
                    l929 7F4A                      l891 7DF0                      l955 7FE2  
                    l963 7E36                      l893 7DF2                      l957 7FE6  
                    l949 7FA0                      l965 7E50                      l895 7DF4  
                    l959 7FFC                      l967 7E92                      l897 7DF6  
                    l889 7DEC                      l899 7DFA                      u300 7FB2  
                    u301 7FAA                      u320 7FFC                      u321 7FF8  
                    u314 7FCC                      u250 7F0E                      u315 7FC8  
                    u251 7F0A                      u308 7FB4                      u244 7EF4  
                    u245 7EF0                      u270 7F48                      u407 7F4C  
                    u271 7F44                      u280 7F70                      u417 7F72  
                    u281 7F6C                      u265 7F22                      u290 7F88  
                    u266 7F24                      u338 7E3C                      u427 7F90  
                    u291 7F84                      u339 7E50                      u348 7E5A  
                    u437 7FDA                      u349 7E6E                      u358 7E7E  
                    u447 7E00                      u359 7E92                      u368 7E9C  
                    u377 7EC6                      u369 7EB0                      u387 7ED2  
                    u397 7F26                      tosl 000FFD                      wreg 000FE8  
                   _Uart 0001                     _main 7E36                     fsr1l 000FE1  
                   start 0000             ___param_bank 000000                    ?_main 000D  
          _transmiteByte 7EB8     transmiteByte@mascara 0010                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8          __initialization 7E0C  
           __end_of_main 7EB8                   ??_main 0014           ?_transmiteByte 000D  
          __activetblptr 000002           _transmiteBytes 000000        fp__inicializarPic 0000  
       __end_of_readByte 8000                   isa$std 000001             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 7E2C            ___rparam_used 000001  
      transmiteByte@byte 000F           __pcstackCOMRAM 000D          ??_transmiteByte 000D  
           readByte@dado 0011           _inicializarPic 7DEC        __end_of_delayWait 7E0C  
              ?_readByte 000D                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7E0C                  __ramtop 0600                  __ptext0 7E36  
                __ptext1 7EB8                  __ptext2 7F56                  __ptext3 7DEC  
                __ptext4 7DFA                  __ptext5 0000   __end_of_inicializarPic 7DFA  
   end_of_initialization 7E2C               ??_readByte 000D            __Lmediumconst 0000  
                postdec1 000FE5                  postinc0 000FEE                  postinc2 000FDE  
              _PORTCbits 000F82                _TRISCbits 000F94          ?_inicializarPic 000D  
     transmiteByte@valor 0011            __pidataCOMRAM 7DE0      start_initialization 7E0C  
  __end_of_transmiteByte 7F56                _delayWait 7DFA               ?_delayWait 000D  
       ??_inicializarPic 000D            readByte@valor 000F                copy_data0 7E20  
               __Hrparam 0000                readByte@i 0012                 __Lrparam 0000  
               _readByte 7F56              ??_delayWait 000D                 isa$xinst 000000  
            _OSCTUNEbits 000F9B           transmiteByte@i 0012               _OSCCONbits 000FD3  
           fp__delayWait 0000         fp__transmiteByte 0000  
